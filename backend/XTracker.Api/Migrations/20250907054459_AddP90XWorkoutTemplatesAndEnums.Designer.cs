// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XTracker.Api.Common.Data;

#nullable disable

namespace XTracker.Api.Migrations
{
    [DbContext(typeof(XTrackerDbContext))]
    [Migration("20250907054459_AddP90XWorkoutTemplatesAndEnums")]
    partial class AddP90XWorkoutTemplatesAndEnums
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DefaultDurationSeconds")
                        .HasColumnType("integer");

                    b.Property<int?>("DefaultRepsMax")
                        .HasColumnType("integer");

                    b.Property<int?>("DefaultRepsMin")
                        .HasColumnType("integer");

                    b.Property<int?>("DefaultSets")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<string>("Equipment")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("FormTips")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsDistanceTracked")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTimeBased")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWeightTracked")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("PrimaryMuscleGroups")
                        .HasColumnType("integer");

                    b.Property<int>("SecondaryMuscleGroups")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("Difficulty");

                    b.HasIndex("Name");

                    b.HasIndex("PrimaryMuscleGroups");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int?>("Reps")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Date");

                    b.HasIndex("Type");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<int?>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Reps")
                        .HasColumnType("integer");

                    b.Property<int>("Sets")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutExercises");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.WorkoutTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<string>("Equipment")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("EstimatedDurationMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("Instructions")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsP90XWorkout")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("Difficulty");

                    b.HasIndex("IsActive");

                    b.HasIndex("IsP90XWorkout");

                    b.HasIndex("Name");

                    b.ToTable("WorkoutTemplates");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.WorkoutTemplateExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DurationSeconds")
                        .HasColumnType("integer");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("boolean");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int?>("RepsMax")
                        .HasColumnType("integer");

                    b.Property<int?>("RepsMin")
                        .HasColumnType("integer");

                    b.Property<int?>("RestBetweenSetsSeconds")
                        .HasColumnType("integer");

                    b.Property<int?>("Sets")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("WorkoutTemplateSectionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutTemplateSectionId", "Order");

                    b.ToTable("WorkoutTemplateExercises");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.WorkoutTemplateSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CircuitRounds")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Instructions")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int?>("RestPeriodSeconds")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutTemplateId", "Order");

                    b.ToTable("WorkoutTemplateSections");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.WorkoutExercise", b =>
                {
                    b.HasOne("XTracker.Api.Features.Workouts.Models.Exercise", "Exercise")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("XTracker.Api.Features.Workouts.Models.Workout", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.WorkoutTemplateExercise", b =>
                {
                    b.HasOne("XTracker.Api.Features.Workouts.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("XTracker.Api.Features.Workouts.Models.WorkoutTemplateSection", "WorkoutTemplateSection")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutTemplateSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutTemplateSection");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.WorkoutTemplateSection", b =>
                {
                    b.HasOne("XTracker.Api.Features.Workouts.Models.WorkoutTemplate", "WorkoutTemplate")
                        .WithMany("Sections")
                        .HasForeignKey("WorkoutTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutTemplate");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.Exercise", b =>
                {
                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.Workout", b =>
                {
                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.WorkoutTemplate", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("XTracker.Api.Features.Workouts.Models.WorkoutTemplateSection", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
